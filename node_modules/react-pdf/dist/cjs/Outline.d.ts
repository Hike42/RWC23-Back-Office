import React from 'react';
import PropTypes from 'prop-types';
import type { PDFDocumentProxy } from 'pdfjs-dist';
import type { EventProps } from 'make-event-props';
import type { OnItemClickArgs } from './shared/types';
type PDFOutline = Awaited<ReturnType<PDFDocumentProxy['getOutline']>>;
export type OutlineProps = {
    className?: string;
    inputRef?: React.Ref<HTMLDivElement>;
    onItemClick?: (props: OnItemClickArgs) => void;
    onLoadError?: (error: Error) => void;
    onLoadSuccess?: (outline: PDFOutline | null) => void;
    pdf?: PDFDocumentProxy | false;
} & EventProps<PDFOutline | null | false | undefined>;
declare function Outline(props: OutlineProps): JSX.Element | null;
declare namespace Outline {
    var propTypes: {
        className: PropTypes.Requireable<NonNullable<string | (string | null | undefined)[] | null | undefined>>;
        inputRef: PropTypes.Requireable<NonNullable<((...args: any[]) => any) | Required<PropTypes.InferProps<{
            current: PropTypes.Requireable<any>;
        }>> | null | undefined>>;
        onItemClick: PropTypes.Requireable<(...args: any[]) => any>;
        onLoadError: PropTypes.Requireable<(...args: any[]) => any>;
        onLoadSuccess: PropTypes.Requireable<(...args: any[]) => any>;
        pdf: PropTypes.Requireable<NonNullable<boolean | PropTypes.InferProps<{
            getDestination: PropTypes.Validator<(...args: any[]) => any>;
            getOutline: PropTypes.Validator<(...args: any[]) => any>;
            getPage: PropTypes.Validator<(...args: any[]) => any>;
            numPages: PropTypes.Validator<number>;
        }> | null | undefined>>;
        onCopy?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCut?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPaste?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCompositionEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCompositionStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCompositionUpdate?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onFocus?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onBlur?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onChange?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onInput?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onReset?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSubmit?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onInvalid?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLoad?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onError?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onKeyDown?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onKeyPress?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onKeyUp?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onAbort?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCanPlay?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCanPlayThrough?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDurationChange?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onEmptied?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onEncrypted?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onEnded?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLoadedData?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLoadedMetadata?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLoadStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPause?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPlay?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPlaying?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onProgress?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onRateChange?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSeeked?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSeeking?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onStalled?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSuspend?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTimeUpdate?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onVolumeChange?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onWaiting?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onClick?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onContextMenu?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDoubleClick?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDrag?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragEnter?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragExit?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragLeave?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragOver?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDrop?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseDown?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseEnter?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseLeave?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseMove?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseOut?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseOver?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseUp?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSelect?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTouchCancel?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTouchEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTouchMove?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTouchStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerDown?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerMove?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerUp?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerCancel?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerEnter?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerLeave?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerOver?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerOut?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onGotPointerCapture?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLostPointerCapture?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onScroll?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onWheel?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onAnimationStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onAnimationEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onAnimationIteration?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTransitionEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onToggle?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
    };
}
export default Outline;
