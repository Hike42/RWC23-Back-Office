import React from 'react';
import PropTypes from 'prop-types';
import type { PDFDocumentProxy } from 'pdfjs-dist';
import type { EventProps } from 'make-event-props';
import type { CustomTextRenderer, NodeOrRenderer, OnGetAnnotationsError, OnGetAnnotationsSuccess, OnGetStructTreeError, OnGetStructTreeSuccess, OnGetTextError, OnGetTextSuccess, OnPageLoadError, OnPageLoadSuccess, OnRenderAnnotationLayerError, OnRenderAnnotationLayerSuccess, OnRenderError, OnRenderSuccess, OnRenderTextLayerError, OnRenderTextLayerSuccess, PageCallback, RenderMode } from './shared/types';
export type PageProps = {
    _className?: string;
    _enableRegisterUnregisterPage?: boolean;
    canvasBackground?: string;
    canvasRef?: React.Ref<HTMLCanvasElement>;
    children?: React.ReactNode;
    className?: string;
    customTextRenderer?: CustomTextRenderer;
    devicePixelRatio?: number;
    error?: NodeOrRenderer;
    height?: number;
    imageResourcesPath?: string;
    inputRef?: React.Ref<HTMLDivElement>;
    loading?: NodeOrRenderer;
    noData?: NodeOrRenderer;
    onGetAnnotationsError?: OnGetAnnotationsError;
    onGetAnnotationsSuccess?: OnGetAnnotationsSuccess;
    onGetStructTreeError?: OnGetStructTreeError;
    onGetStructTreeSuccess?: OnGetStructTreeSuccess;
    onGetTextError?: OnGetTextError;
    onGetTextSuccess?: OnGetTextSuccess;
    onLoadError?: OnPageLoadError;
    onLoadSuccess?: OnPageLoadSuccess;
    onRenderAnnotationLayerError?: OnRenderAnnotationLayerError;
    onRenderAnnotationLayerSuccess?: OnRenderAnnotationLayerSuccess;
    onRenderError?: OnRenderError;
    onRenderSuccess?: OnRenderSuccess;
    onRenderTextLayerError?: OnRenderTextLayerError;
    onRenderTextLayerSuccess?: OnRenderTextLayerSuccess;
    pageIndex?: number;
    pageNumber?: number;
    pdf?: PDFDocumentProxy | false;
    registerPage?: undefined;
    renderAnnotationLayer?: boolean;
    renderForms?: boolean;
    renderMode?: RenderMode;
    renderTextLayer?: boolean;
    rotate?: number | null;
    scale?: number;
    unregisterPage?: undefined;
    width?: number;
} & EventProps<PageCallback | false | undefined>;
declare function Page(props: PageProps): JSX.Element;
declare namespace Page {
    var propTypes: {
        canvasBackground: PropTypes.Requireable<string>;
        canvasRef: PropTypes.Requireable<NonNullable<((...args: any[]) => any) | Required<PropTypes.InferProps<{
            current: PropTypes.Requireable<any>;
        }>> | null | undefined>>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        className: PropTypes.Requireable<NonNullable<string | (string | null | undefined)[] | null | undefined>>;
        customTextRenderer: PropTypes.Requireable<(...args: any[]) => any>;
        devicePixelRatio: PropTypes.Requireable<number>;
        error: PropTypes.Requireable<NonNullable<PropTypes.ReactNodeLike | ((...args: any[]) => any)>>;
        height: PropTypes.Requireable<number>;
        imageResourcesPath: PropTypes.Requireable<string>;
        inputRef: PropTypes.Requireable<NonNullable<((...args: any[]) => any) | Required<PropTypes.InferProps<{
            current: PropTypes.Requireable<any>;
        }>> | null | undefined>>;
        loading: PropTypes.Requireable<NonNullable<PropTypes.ReactNodeLike | ((...args: any[]) => any)>>;
        noData: PropTypes.Requireable<NonNullable<PropTypes.ReactNodeLike | ((...args: any[]) => any)>>;
        onGetTextError: PropTypes.Requireable<(...args: any[]) => any>;
        onGetTextSuccess: PropTypes.Requireable<(...args: any[]) => any>;
        onLoadError: PropTypes.Requireable<(...args: any[]) => any>;
        onLoadSuccess: PropTypes.Requireable<(...args: any[]) => any>;
        onRenderError: PropTypes.Requireable<(...args: any[]) => any>;
        onRenderSuccess: PropTypes.Requireable<(...args: any[]) => any>;
        onRenderTextLayerError: PropTypes.Requireable<(...args: any[]) => any>;
        onRenderTextLayerSuccess: PropTypes.Requireable<(...args: any[]) => any>;
        pageIndex: PropTypes.Validator<number>;
        pageNumber: PropTypes.Validator<number>;
        pdf: PropTypes.Requireable<NonNullable<boolean | PropTypes.InferProps<{
            getDestination: PropTypes.Validator<(...args: any[]) => any>;
            getOutline: PropTypes.Validator<(...args: any[]) => any>;
            getPage: PropTypes.Validator<(...args: any[]) => any>;
            numPages: PropTypes.Validator<number>;
        }> | null | undefined>>;
        renderAnnotationLayer: PropTypes.Requireable<boolean>;
        renderForms: PropTypes.Requireable<boolean>;
        renderMode: PropTypes.Requireable<string>;
        renderTextLayer: PropTypes.Requireable<boolean>;
        rotate: PropTypes.Requireable<number>;
        scale: PropTypes.Requireable<number>;
        width: PropTypes.Requireable<number>;
        onCopy?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCut?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPaste?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCompositionEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCompositionStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCompositionUpdate?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onFocus?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onBlur?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onChange?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onInput?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onReset?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSubmit?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onInvalid?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLoad?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onError?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onKeyDown?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onKeyPress?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onKeyUp?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onAbort?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCanPlay?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onCanPlayThrough?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDurationChange?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onEmptied?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onEncrypted?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onEnded?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLoadedData?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLoadedMetadata?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLoadStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPause?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPlay?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPlaying?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onProgress?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onRateChange?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSeeked?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSeeking?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onStalled?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSuspend?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTimeUpdate?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onVolumeChange?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onWaiting?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onClick?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onContextMenu?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDoubleClick?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDrag?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragEnter?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragExit?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragLeave?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragOver?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDragStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onDrop?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseDown?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseEnter?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseLeave?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseMove?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseOut?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseOver?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onMouseUp?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onSelect?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTouchCancel?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTouchEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTouchMove?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTouchStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerDown?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerMove?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerUp?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerCancel?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerEnter?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerLeave?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerOver?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onPointerOut?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onGotPointerCapture?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onLostPointerCapture?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onScroll?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onWheel?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onAnimationStart?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onAnimationEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onAnimationIteration?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onTransitionEnd?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
        onToggle?: PropTypes.Requireable<(...args: any[]) => any> | undefined;
    };
}
export default Page;
